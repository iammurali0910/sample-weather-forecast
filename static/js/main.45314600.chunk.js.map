{"version":3,"sources":["home/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Home","React","useState","cityWeatherInfo","setCityWeatherInfo","cityName","setCityName","fetchData","a","axios","result","data","city","name","list","useEffect","getTime","timestamp","utcTime","Date","getUTCHours","className","length","map","dt","toUTCString","toString","split","getUTCDate","Math","round","main","temp","feels_like","humidity","wind","speed","weather","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAsFeA,EAnFF,WAAM,MAE6BC,IAAMC,SAAS,IAF5C,mBAEVC,EAFU,KAEOC,EAFP,OAGeH,IAAMC,SAAS,IAH9B,mBAGVG,EAHU,KAGAC,EAHA,KAMXC,EAAS,uCAAG,4BAAAC,EAAA,sEACKC,IACnB,8GAFc,OACVC,EADU,OAIhBJ,EAAYI,EAAOC,KAAKC,KAAKC,MAC7BT,EAAmBM,EAAOC,KAAKG,MALf,2CAAH,qDAQfC,qBAAU,WACRR,MACC,IAGH,IAQMS,EAAU,SAACC,GACf,IAAIC,EAAU,IAAIC,KAAiB,IAAZF,GAAkBG,cAQzC,OAPIF,EAAU,GACI,IAAZA,EAAeA,EAAUA,EAAU,GAAK,KACvCA,GAAoB,KAET,KAAZA,EAAgBA,GAAoB,KACnCA,EAAWA,EAAU,GAAM,KAE3BA,GAGT,OACE,gCACE,sBAAKG,UAAU,aAAf,UACE,kDACA,wCAAWhB,QAEZF,GAC4B,IAA3BA,EAAgBmB,QAChBnB,EAAgBoB,KAAI,SAACZ,GAAD,OAClB,sBAAKU,UAAU,oBAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,sBAAMA,UAAU,YAAhB,kBACA,8BAhCIJ,EAgCQN,EAAKa,GA/BL,IAAIL,KAAiB,IAAZF,GAAkBQ,cACfC,WAAWC,MAAM,KAAK,GAEnC,IADL,IAAIR,KAAiB,IAAZF,GAAkBW,mBA+BnC,sBAAKP,UAAU,mBAAf,UACE,sBAAMA,UAAU,YAAhB,kBACA,6BAAKL,EAAQL,EAAKa,SAEpB,sBAAKH,UAAU,mBAAf,UACE,sBAAMA,UAAU,YAAhB,kBACA,+BAAKQ,KAAKC,MAAMnB,EAAKoB,KAAKC,KAAO,QAAjC,cAEF,sBAAKX,UAAU,mBAAf,UACE,sBAAMA,UAAU,YAAhB,wBACA,+BAAKQ,KAAKC,MAAMnB,EAAKoB,KAAKE,WAAa,QAAvC,cAEF,sBAAKZ,UAAU,mBAAf,UACE,sBAAMA,UAAU,YAAhB,sBACA,+BAAKV,EAAKoB,KAAKG,SAAf,UAEF,sBAAKb,UAAU,mBAAf,UACE,sBAAMA,UAAU,YAAhB,wBACA,+BAAKV,EAAKwB,KAAKC,MAAf,aAEF,sBAAKf,UAAU,mBAAf,UACE,sBAAMA,UAAU,YAAhB,SAA6B,OAC7B,6BAAKV,EAAK0B,QAAQ,GAAGN,YA3BepB,EAAKa,IA7BtC,IAACP,SCHHqB,EAVH,WACV,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWxC,SCDpByC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.45314600.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Home = () => {\n  //Home component state variables\n  const [cityWeatherInfo, setCityWeatherInfo] = React.useState([]);\n  const [cityName, setCityName] = React.useState(\"\");\n\n  //fetch data asyn function\n  const fetchData = async () => {\n    const result = await axios(\n      \"https://api.openweathermap.org/data/2.5/forecast?id=4517009&count=5&appid=64813bed39e7e05d3566344699c07414\"\n    );\n    setCityName(result.data.city.name);\n    setCityWeatherInfo(result.data.list);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // get UTC date\n  const getDay = (timestamp) => {\n    const utcDateString = new Date(timestamp * 1000).toUTCString();\n    const utcDateName = utcDateString.toString().split(\" \")[0];\n    const utcDate = new Date(timestamp * 1000).getUTCDate();\n    return utcDateName + \" \" + utcDate;\n  };\n\n  // get UTC time\n  const getTime = (timestamp) => {\n    let utcTime = new Date(timestamp * 1000).getUTCHours();\n    if (utcTime < 12) {\n      if (utcTime === 0) utcTime = utcTime + 12 + \"AM\";\n      else utcTime = utcTime + \"AM\";\n    } else {\n      if (utcTime === 12) utcTime = utcTime + \"PM\";\n      else utcTime = (utcTime % 12) + \"PM\";\n    }\n    return utcTime;\n  };\n\n  return (\n    <div>\n      <div className='city-title'>\n        <h1>Weather Forecast</h1>\n        <h2>City: {cityName}</h2>\n      </div>\n      {cityWeatherInfo &&\n        cityWeatherInfo.length !== 0 &&\n        cityWeatherInfo.map((data) => (\n          <div className='weather-info-card' key={data.dt}>\n            <div className='weather-fist-col'>\n              <span className='col-title'>Date</span>\n              <h4>{getDay(data.dt)}</h4>\n            </div>\n            <div className='weather-fist-col'>\n              <span className='col-title'>Time</span>\n              <h4>{getTime(data.dt)}</h4>\n            </div>\n            <div className='weather-fist-col'>\n              <span className='col-title'>Temp</span>\n              <h4>{Math.round(data.main.temp - 273.15)}°C</h4>\n            </div>\n            <div className='weather-fist-col'>\n              <span className='col-title'>Feels Like</span>\n              <h4>{Math.round(data.main.feels_like - 273.15)}°C</h4>\n            </div>\n            <div className='weather-fist-col'>\n              <span className='col-title'>Humidity</span>\n              <h4>{data.main.humidity}%</h4>\n            </div>\n            <div className='weather-fist-col'>\n              <span className='col-title'>Wind Speed</span>\n              <h4>{data.wind.speed}km/h</h4>\n            </div>\n            <div className='weather-fist-col'>\n              <span className='col-title'>{\"  \"}</span>\n              <h4>{data.weather[0].main}</h4>\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport './App.css';\nimport Home from './home/Home';\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path='/' component={Home} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}